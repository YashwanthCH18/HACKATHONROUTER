service: router-service

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 256
  timeout: 30
  environment:
    # Environment variables are loaded from env.yml file
    DB_HOST: ${file(./env.yml):DB_HOST}
    DB_PORT: ${file(./env.yml):DB_PORT}
    DB_NAME: ${file(./env.yml):DB_NAME}
    DB_USER: ${file(./env.yml):DB_USER}
    DB_PASSWORD: ${file(./env.yml):DB_PASSWORD}
    PORT: ${file(./env.yml):PORT}
    JWT_SECRET: ${file(./env.yml):JWT_SECRET}
    ADMIN_BACKEND_URL: ${file(./env.yml):ADMIN_BACKEND_URL}
    USER_BACKEND_URL: ${file(./env.yml):USER_BACKEND_URL}
    NODE_ENV: ${file(./env.yml):NODE_ENV, 'development'}
    ALLOWED_ORIGINS: ${file(./env.yml):ALLOWED_ORIGINS}

functions:
  api:
    handler: src/serverless.handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

custom:
  serverless-offline:
    httpPort: 5000